{
  "$schema": "https://demotime.elio.dev/demo-time.schema.json",
  "title": "4.[DEMO] Mutex Demo",
  "description": "This demoes how to use Mutex in Rust programming language.",
  "demos": [
    {
      "title": "MUTEX_DEMO::Slide 1",
      "steps": [
        {
          "action": "openSlide",
          "path": "/.demo/slides/4_mutex/slide1.md"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Open slide2",
      "steps": [
        {
          "action": "openSlide",
          "path": "/.demo/slides/4_mutex/slide2.md"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Open slide3",
      "steps": [
        {
          "action": "openSlide",
          "path": "/.demo/slides/4_mutex/slide3.md"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Open slide4",
      "steps": [
        {
          "action": "openSlide",
          "path": "/.demo/slides/4_mutex/slide4.md"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Initialize package",
      "steps": [
        {
          "action": "snippet",
          "contentPath": "./snippets/create_package.json",
          "args": {
            "PACKAGE_NAME": "mutex_demo",
            "FOLDER_NAME": "4_mutex_demo"
          }
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Install tokio",
      "steps": [
        {
          "action": "closeTerminal",
          "terminalId": "create_package"
        },
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "cd src/examples/4_mutex_demo && cargo add tokio --features full"
        },
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/Cargo.toml"
        },
        {
          "action": "create",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Write initial  simple example code",
      "steps": [
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/src/main.rs"
        },
        {
          "action": "applyPatch",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs",
          "patch": "/patches/mutex_demo/step1.patch"
        },
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "clear && cargo run"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Replace code with next mutex example",
      "steps": [
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/src/main.rs"
        },
        {
          "action": "applyPatch",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs",
          "patch": "/patches/mutex_demo/step2.patch"
        },
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "clear && cargo run"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Interchange first sleep and lock",
      "steps": [
        {
          "action": "applyPatch",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs",
          "patch": "/patches/mutex_demo/step3.patch"
        },
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/src/main.rs"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Run the code",
      "steps": [
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "clear && cargo run"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Interchange second sleep and lock",
      "steps": [
        {
          "action": "applyPatch",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs",
          "patch": "/patches/mutex_demo/step4.patch"
        },
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/src/main.rs"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Run the code",
      "steps": [
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "clear && cargo run"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Adds file write example",
      "steps": [
        {
          "action": "applyPatch",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs",
          "patch": "/patches/mutex_demo/step5.patch"
        },
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/src/main.rs"
        },
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "clear && cargo run"
        }
      ]
    },
    {
      "title": "MUTEX_DEMO::Fixes deadlock",
      "steps": [
        {
          "action": "applyPatch",
          "path": "/src/examples/4_mutex_demo/src/main.rs",
          "contentPath": "/snapshots/mutex_demo.snapshot.rs",
          "patch": "/patches/mutex_demo/step6.patch"
        },
        {
          "action": "open",
          "path": "/src/examples/4_mutex_demo/src/main.rs"
        },
        {
          "action": "executeTerminalCommand",
          "terminalId": "mutex_demo",
          "command": "clear && cargo run"
        }
      ]
    }
  ]
}